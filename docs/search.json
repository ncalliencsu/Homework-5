[
  {
    "objectID": "EDA Practice.html",
    "href": "EDA Practice.html",
    "title": "EDA Practice",
    "section": "",
    "text": "Modify the code provided with the download to read in the data from a local file source (your downloaded .csv files) and combine the two data frames. Use local paths as they do in their code.\n\n\n\nd1=read.table(\"student-mat.csv\",sep=\";\",header=TRUE)\nd2=read.table(\"student-por.csv\",sep=\";\",header=TRUE)\n\nd3=merge(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\nprint(nrow(d3)) # 382 students\n\n[1] 382\n\n\n\nread in and combine the data using functions from the tidyverse. Use an inner_join() on the variables they used in their code. Do you notice any issues? Make a note of the issue.\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   4.0.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nmath = read_delim(\"student-mat.csv\", delim = \";\",col_names = TRUE)\n\nRows: 395 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npor = read_delim(\"student-por.csv\", delim = \";\",col_names = TRUE)\n\nRows: 649 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nd3 = inner_join(math, por, by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(math, por, by = c(\"school\", \"sex\", \"age\", \"address\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nThis warning means that, for the columns we specified in the inner join, values in Row 79 of the math data appear more than once in the por frame, and vice versa (values in Row 79 of the por data appear more than once in the math data. As a result, the inner join creates all possible combinations for those matches.\n\nUse an inner_join() on all variables other than G1, G2, G3, paid, and absences. Use this form of the combined data in further exercises.\n\n\ncombined &lt;- inner_join(math, por, by = c(\"school\", \"sex\", \"age\", \"address\", \"famsize\", \"Pstatus\", \"Medu\", \"Fedu\", \"Mjob\", \"Fjob\", \"reason\", \"guardian\", \"traveltime\", \"studytime\", \"failures\", \"schoolsup\", \"famsup\", \"activities\", \"nursery\", \"higher\", \"internet\", \"romantic\", \"famrel\", \"freetime\", \"goout\", \"Dalc\", \"Walc\", \"health\"))\n\nThis code performs an inner join between the math and por data frames using a comprehensive set of columns as keys. This will keep only the rows where all these columns match in both data frames. If there are columns in math and por with the same name that are not included in the by argument, the resulting combined data frame will have those columns with .x and .y suffixes to distinguish them (absences, paid, G1, G2 and G3).\nNext, for the math data, Portuguese, and combined data, choose four categorical variables you are interested in and convert those into factor variables in each tibble (use the same four variables in each). Use the mutate() function to accomplish this.\nI chose guardian, reason, Mjob and Fjob\n\nmath |&gt; mutate(guardian = as_factor(guardian), reason = as_factor(reason), Mjob = as_factor(Mjob), Fjob = as_factor(Fjob))\n\n# A tibble: 395 × 33\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;    &lt;fct&gt;  &lt;fct&gt; \n 1 GP     F        18 U       GT3     A           4     4 at_home  teach… course\n 2 GP     F        17 U       GT3     T           1     1 at_home  other  course\n 3 GP     F        15 U       LE3     T           1     1 at_home  other  other \n 4 GP     F        15 U       GT3     T           4     2 health   servi… home  \n 5 GP     F        16 U       GT3     T           3     3 other    other  home  \n 6 GP     M        16 U       LE3     T           4     3 services other  reput…\n 7 GP     M        16 U       LE3     T           2     2 other    other  home  \n 8 GP     F        17 U       GT3     A           4     4 other    teach… home  \n 9 GP     M        15 U       LE3     A           3     2 services other  home  \n10 GP     M        15 U       GT3     T           3     4 other    other  home  \n# ℹ 385 more rows\n# ℹ 22 more variables: guardian &lt;fct&gt;, traveltime &lt;dbl&gt;, studytime &lt;dbl&gt;,\n#   failures &lt;dbl&gt;, schoolsup &lt;chr&gt;, famsup &lt;chr&gt;, paid &lt;chr&gt;,\n#   activities &lt;chr&gt;, nursery &lt;chr&gt;, higher &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic &lt;chr&gt;, famrel &lt;dbl&gt;, freetime &lt;dbl&gt;, goout &lt;dbl&gt;, Dalc &lt;dbl&gt;,\n#   Walc &lt;dbl&gt;, health &lt;dbl&gt;, absences &lt;dbl&gt;, G1 &lt;dbl&gt;, G2 &lt;dbl&gt;, G3 &lt;dbl&gt;\n\npor |&gt; mutate(guardian = as_factor(guardian), reason = as_factor(reason), Mjob = as_factor(Mjob), Fjob = as_factor(Fjob))\n\n# A tibble: 649 × 33\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;    &lt;fct&gt;  &lt;fct&gt; \n 1 GP     F        18 U       GT3     A           4     4 at_home  teach… course\n 2 GP     F        17 U       GT3     T           1     1 at_home  other  course\n 3 GP     F        15 U       LE3     T           1     1 at_home  other  other \n 4 GP     F        15 U       GT3     T           4     2 health   servi… home  \n 5 GP     F        16 U       GT3     T           3     3 other    other  home  \n 6 GP     M        16 U       LE3     T           4     3 services other  reput…\n 7 GP     M        16 U       LE3     T           2     2 other    other  home  \n 8 GP     F        17 U       GT3     A           4     4 other    teach… home  \n 9 GP     M        15 U       LE3     A           3     2 services other  home  \n10 GP     M        15 U       GT3     T           3     4 other    other  home  \n# ℹ 639 more rows\n# ℹ 22 more variables: guardian &lt;fct&gt;, traveltime &lt;dbl&gt;, studytime &lt;dbl&gt;,\n#   failures &lt;dbl&gt;, schoolsup &lt;chr&gt;, famsup &lt;chr&gt;, paid &lt;chr&gt;,\n#   activities &lt;chr&gt;, nursery &lt;chr&gt;, higher &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic &lt;chr&gt;, famrel &lt;dbl&gt;, freetime &lt;dbl&gt;, goout &lt;dbl&gt;, Dalc &lt;dbl&gt;,\n#   Walc &lt;dbl&gt;, health &lt;dbl&gt;, absences &lt;dbl&gt;, G1 &lt;dbl&gt;, G2 &lt;dbl&gt;, G3 &lt;dbl&gt;\n\ncombined &lt;- combined |&gt; mutate(guardian = as_factor(guardian), reason = as_factor(reason), Mjob = as_factor(Mjob), Fjob = as_factor(Fjob))\n\n\n\n\nWe’ve talked about the general process of conducting an EDA. You try to understand how your data is stored, what is missing, and you try to summarize the variables both numerically and visually to understand relationships within the data. Do the rest of these items on the combined data:\nLook at how the data is stored and see if everything makes sense.\n\nstr(combined)\n\ntibble [320 × 38] (S3: tbl_df/tbl/data.frame)\n $ school    : chr [1:320] \"GP\" \"GP\" \"GP\" \"GP\" ...\n $ sex       : chr [1:320] \"F\" \"F\" \"F\" \"F\" ...\n $ age       : num [1:320] 18 17 15 16 16 16 17 15 15 15 ...\n $ address   : chr [1:320] \"U\" \"U\" \"U\" \"U\" ...\n $ famsize   : chr [1:320] \"GT3\" \"GT3\" \"GT3\" \"GT3\" ...\n $ Pstatus   : chr [1:320] \"A\" \"T\" \"T\" \"T\" ...\n $ Medu      : num [1:320] 4 1 4 3 4 2 4 3 3 4 ...\n $ Fedu      : num [1:320] 4 1 2 3 3 2 4 2 4 4 ...\n $ Mjob      : Factor w/ 5 levels \"at_home\",\"health\",..: 1 1 2 3 4 3 3 4 3 5 ...\n $ Fjob      : Factor w/ 5 levels \"teacher\",\"other\",..: 1 2 3 2 2 2 1 2 2 4 ...\n $ reason    : Factor w/ 4 levels \"course\",\"home\",..: 1 1 2 2 3 2 2 2 2 3 ...\n $ guardian  : Factor w/ 3 levels \"mother\",\"father\",..: 1 2 1 2 1 1 1 1 1 1 ...\n $ traveltime: num [1:320] 2 1 1 1 1 1 2 1 1 1 ...\n $ studytime : num [1:320] 2 2 3 2 2 2 2 2 2 2 ...\n $ failures  : num [1:320] 0 0 0 0 0 0 0 0 0 0 ...\n $ schoolsup : chr [1:320] \"yes\" \"no\" \"no\" \"no\" ...\n $ famsup    : chr [1:320] \"no\" \"yes\" \"yes\" \"yes\" ...\n $ paid.x    : chr [1:320] \"no\" \"no\" \"yes\" \"yes\" ...\n $ activities: chr [1:320] \"no\" \"no\" \"yes\" \"no\" ...\n $ nursery   : chr [1:320] \"yes\" \"no\" \"yes\" \"yes\" ...\n $ higher    : chr [1:320] \"yes\" \"yes\" \"yes\" \"yes\" ...\n $ internet  : chr [1:320] \"no\" \"yes\" \"yes\" \"no\" ...\n $ romantic  : chr [1:320] \"no\" \"no\" \"yes\" \"no\" ...\n $ famrel    : num [1:320] 4 5 3 4 5 4 4 4 5 3 ...\n $ freetime  : num [1:320] 3 3 2 3 4 4 1 2 5 3 ...\n $ goout     : num [1:320] 4 3 2 2 2 4 4 2 1 3 ...\n $ Dalc      : num [1:320] 1 1 1 1 1 1 1 1 1 1 ...\n $ Walc      : num [1:320] 1 1 1 2 2 1 1 1 1 2 ...\n $ health    : num [1:320] 3 3 5 5 5 3 1 1 5 2 ...\n $ absences.x: num [1:320] 6 4 2 4 10 0 6 0 0 0 ...\n $ G1.x      : num [1:320] 5 5 15 6 15 12 6 16 14 10 ...\n $ G2.x      : num [1:320] 6 5 14 10 15 12 5 18 15 8 ...\n $ G3.x      : num [1:320] 6 6 15 10 15 11 6 19 15 9 ...\n $ paid.y    : chr [1:320] \"no\" \"no\" \"no\" \"no\" ...\n $ absences.y: num [1:320] 4 2 0 0 6 0 2 0 0 2 ...\n $ G1.y      : num [1:320] 0 9 14 11 12 13 10 15 12 14 ...\n $ G2.y      : num [1:320] 11 11 14 13 12 12 13 16 12 14 ...\n $ G3.y      : num [1:320] 11 11 14 13 13 13 13 17 13 14 ...\n\n\nLooking at the output of the str() command. In addition to the changing of the four variables above into factors, the following changes would make sense. Many of them should be factors, and some should be converted to integer.\n\n$ age : int [1:320] 18 17 15 16 16 16 17 15 15 15 …\n$ Medu : fct [1:320] 4 1 4 3 4 2 4 3 3 4 …\n$ Fedu : fct [1:320] 4 1 2 3 3 2 4 2 4 4 …\n$ traveltime: fct [1:320] 2 1 1 1 1 1 2 1 1 1 …\n$ studytime : fct [1:320] 2 2 3 2 2 2 2 2 2 2 …\n$ failures : int [1:320] 0 0 0 0 0 0 0 0 0 0 …\n$ famrel : fct [1:320] 4 5 3 4 5 4 4 4 5 3 …\n$ freetime : fct [1:320] 3 3 2 3 4 4 1 2 5 3 …\n$ goout : fct [1:320] 4 3 2 2 2 4 4 2 1 3 …\n$ Dalc : fct [1:320] 1 1 1 1 1 1 1 1 1 1 …\n$ Walc : fct [1:320] 1 1 1 2 2 1 1 1 1 2 …\n$ health : fct [1:320] 3 3 5 5 5 3 1 1 5 2 …\n$ absences.x: int [1:320] 6 4 2 4 10 0 6 0 0 0 …\n$ absences.y: int [1:320] 4 2 0 0 6 0 2 0 0 2 …\n$ G1.x : int [1:320] 5 5 15 6 15 12 6 16 14 10 …\n$ G2.x : int [1:320] 6 5 14 10 15 12 5 18 15 8 …\n$ G3.x : int [1:320] 6 6 15 10 15 11 6 19 15 9 …\n$ G1.y : int [1:320] 0 9 14 11 12 13 10 15 12 14 …\n$ G2.y : int [1:320] 11 11 14 13 12 12 13 16 12 14 …\n$ G3.y : int [1:320] 11 11 14 13 13 13 13 17 13 14 …\n\nI also see that paid, absences, G1, G2 and G3 have .x and .y components from the inner join.\nDocument the missing values in the data.\n\ncolSums(is.na(combined))\n\n    school        sex        age    address    famsize    Pstatus       Medu \n         0          0          0          0          0          0          0 \n      Fedu       Mjob       Fjob     reason   guardian traveltime  studytime \n         0          0          0          0          0          0          0 \n  failures  schoolsup     famsup     paid.x activities    nursery     higher \n         0          0          0          0          0          0          0 \n  internet   romantic     famrel   freetime      goout       Dalc       Walc \n         0          0          0          0          0          0          0 \n    health absences.x       G1.x       G2.x       G3.x     paid.y absences.y \n         0          0          0          0          0          0          0 \n      G1.y       G2.y       G3.y \n         0          0          0 \n\n\nFrom this output, there does not seem to be any missing data.\n\n\nCreate a one-way contingency table, a two-way contingency table, and a three-way contingency table for some of the factor variables you created previously. Use table() to accomplish this. – Interpret a number from each resulting table (that is, pick out a value produced and explain what that value means.)\n\n#1-way Contingency Table\ncat(\"1-way Contingency Table\", \"\\n\")\n\n1-way Contingency Table \n\ntable(combined$guardian)\n\n\nmother father  other \n   237     74      9 \n\ncat(\"\\n\")\n#2-way Contingency Table\ncat(\"2-way Contingency Table\", \"\\n\")\n\n2-way Contingency Table \n\ntable(combined$guardian, combined$reason)\n\n        \n         course home reputation other\n  mother     90   60         64    23\n  father     27   22         19     6\n  other       1    5          2     1\n\ncat(\"\\n\")\n#3-way Contingency Table\ncat(\"3-way Contingency Table\", \"\\n\")\n\n3-way Contingency Table \n\ntable(combined$guardian, combined$reason, combined$Fjob)\n\n, ,  = teacher\n\n        \n         course home reputation other\n  mother      8    5          5     2\n  father      2    2          1     2\n  other       0    0          0     0\n\n, ,  = other\n\n        \n         course home reputation other\n  mother     55   38         36     9\n  father      8   12         10     1\n  other       1    5          2     0\n\n, ,  = services\n\n        \n         course home reputation other\n  mother     19   14         15    10\n  father     15    6          5     2\n  other       0    0          0     1\n\n, ,  = health\n\n        \n         course home reputation other\n  mother      2    1          6     1\n  father      1    0          3     1\n  other       0    0          0     0\n\n, ,  = at_home\n\n        \n         course home reputation other\n  mother      6    2          2     1\n  father      1    2          0     0\n  other       0    0          0     0\n\ncat(\"\\n\")\n\nInterpretation of 1-way Contingency Table - there are 237 mothers that are guardians in the sample.\nInterpretation of 2-way Contingency Table - 22 fathers chose the school because it was close to home.\nInterpretation of 3-way Contingency Table - 8 mothers who are teachers chose the school because it was close to home.\nCreate a conditional two-way table using table(). That is, condition on one variable’s setting and create a two-way table. Do this using two different methods: – Once, by subsetting the data (say with filter()) and then creating the two-way table – Once, by creating a three-way table and subsetting it\n\n#Conditional Two-way Contingency Tables \n#Using Filter\ncat(\"2-way Conditional Contingency Table\", \"\\n\", \"Filter for Mother\", \"\\n\")\n\n2-way Conditional Contingency Table \n Filter for Mother \n\nfilt &lt;- combined |&gt; filter(guardian == \"mother\") \ntable(filt$Fjob, filt$reason) \n\n          \n           course home reputation other\n  teacher       8    5          5     2\n  other        55   38         36     9\n  services     19   14         15    10\n  health        2    1          6     1\n  at_home       6    2          2     1\n\ncat(\"\\n\")\n#Subsetting a 3-way Contingency Table\ncat(\"2-way Conditional Contingency Table\", \"\\n\", \"Subset 3-Way Table\", \"\\n\")\n\n2-way Conditional Contingency Table \n Subset 3-Way Table \n\nss &lt;- table(combined$guardian, combined$Fjob, combined$reason)\nss[\"mother\", ,]\n\n          \n           course home reputation other\n  teacher       8    5          5     2\n  other        55   38         36     9\n  services     19   14         15    10\n  health        2    1          6     1\n  at_home       6    2          2     1\n\ncat(\"\\n\")\n\nCreate a two-way contingency table using group_by() and summarize() from dplyr. Then use pivot_wider() to make the result look more like the output from table().\n\ncombined |&gt;\n  group_by(guardian, reason) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'guardian'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 12 × 3\n# Groups:   guardian [3]\n   guardian reason     count\n   &lt;fct&gt;    &lt;fct&gt;      &lt;int&gt;\n 1 mother   course        90\n 2 mother   home          60\n 3 mother   reputation    64\n 4 mother   other         23\n 5 father   course        27\n 6 father   home          22\n 7 father   reputation    19\n 8 father   other          6\n 9 other    course         1\n10 other    home           5\n11 other    reputation     2\n12 other    other          1\n\n\n\ncombined |&gt;\n  group_by(guardian, reason) |&gt;\n  summarize(count = n()) |&gt;\n  pivot_wider(names_from = reason, values_from = count)\n\n`summarise()` has grouped output by 'guardian'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 5\n# Groups:   guardian [3]\n  guardian course  home reputation other\n  &lt;fct&gt;     &lt;int&gt; &lt;int&gt;      &lt;int&gt; &lt;int&gt;\n1 mother       90    60         64    23\n2 father       27    22         19     6\n3 other         1     5          2     1\n\n\nCreate a stacked bar graph and a side-by-side bar graph. Give relevant x and y labels, and a title for the plots.\n\n#Stacked Bar Graph\n\ng &lt;- ggplot(data = combined , aes(x = guardian, fill = reason))\ng + geom_bar() + labs(title = \"Count of School Choice Reason by Guardian\", x = \"Guardian Category\", y = \"Count by Guardian\")\n\n\n\n\n\n\n\n#Horizontal Bar Graph\ng &lt;- ggplot(data = combined , aes(x = guardian, fill = reason))\ng + geom_bar() + labs(title = \"Count of School Choice Reason by Guardian\", x = \"Guardian Category\", y = \"Count by Guardian\") +\ncoord_flip()\n\n\n\n\n\n\n\n\n\n\n\nThe numeric variables are age, absences, and the three test grades variables (G1, G2, and G3) from each data set (math and Portuguese).\n• Find measures of center and spread for three of these variables (including at least one G3 variable)\n– Repeat while subsetting the data in a meaningful way.\n\nlibrary(dplyr)\n\ncombined |&gt;\n  summarize(mean_age = mean(age), sd_age = sd(age))\n\n# A tibble: 1 × 2\n  mean_age sd_age\n     &lt;dbl&gt;  &lt;dbl&gt;\n1     16.5   1.14\n\ncombined |&gt;\n  summarize(mean_abs.x = mean(absences.x), sd_abs = sd(absences.x))\n\n# A tibble: 1 × 2\n  mean_abs.x sd_abs\n       &lt;dbl&gt;  &lt;dbl&gt;\n1       5.41   7.84\n\ncombined |&gt;\n  summarize(mean_G3.x = mean(G3.x), sd_G3 = sd(G3.x))\n\n# A tibble: 1 × 2\n  mean_G3.x sd_G3\n      &lt;dbl&gt; &lt;dbl&gt;\n1      11.0  4.30\n\n#Subsetted in a meaningful way (address = Urban)\ncombined |&gt; filter(address == \"U\") |&gt;\n  summarize(mean_age = mean(age), sd_age = sd(age))\n\n# A tibble: 1 × 2\n  mean_age sd_age\n     &lt;dbl&gt;  &lt;dbl&gt;\n1     16.4   1.12\n\ncombined |&gt; filter(address == \"U\") |&gt;\n  summarize(mean_absx.x = mean(absences.x), sd_abs = sd(absences.x))\n\n# A tibble: 1 × 2\n  mean_absx.x sd_abs\n        &lt;dbl&gt;  &lt;dbl&gt;\n1        5.23   7.24\n\ncombined |&gt; filter(address == \"U\") |&gt;\n  summarize(mean_G3.x = mean(G3.x), sd_G3 = sd(G3.x))\n\n# A tibble: 1 × 2\n  mean_G3.x sd_G3\n      &lt;dbl&gt; &lt;dbl&gt;\n1      11.3  4.18\n\n\nFind measures of center and spread across a single grouping variable for three of these variables (including a G3 variable as one of them)\n\ncombined |&gt;\n  group_by(address) |&gt;\n  summarize(mean_age = mean(age), sd_age = sd(age), mean_absx.x = mean(absences.x), sd_abs = sd(absences.x), mean_G3.x = mean(G3.x), sd_G3 = sd(G3.x))  \n\n# A tibble: 2 × 7\n  address mean_age sd_age mean_absx.x sd_abs mean_G3.x sd_G3\n  &lt;chr&gt;      &lt;dbl&gt;  &lt;dbl&gt;       &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 R           17.0   1.12        6.12   9.80      9.90  4.59\n2 U           16.4   1.12        5.23   7.24     11.3   4.18\n\n\nFind measures of center and spread across two grouping variables for three of these variables (including a G3 variable as one of them)\n\ncombined |&gt;\n  group_by(address, Fjob) |&gt;\n  summarize(mean_age = mean(age), sd_age = sd(age), mean_absx.x = mean(absences.x), sd_abs = sd(absences.x), mean_G3.x = mean(G3.x), sd_G3 = sd(G3.x))\n\n`summarise()` has grouped output by 'address'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 10 × 8\n# Groups:   address [2]\n   address Fjob     mean_age sd_age mean_absx.x sd_abs mean_G3.x sd_G3\n   &lt;chr&gt;   &lt;fct&gt;       &lt;dbl&gt;  &lt;dbl&gt;       &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1 R       teacher      16.2  1.10         6.2    3.77     11     6.82\n 2 R       other        17.2  0.986        5.85   5.55      9.95  4.71\n 3 R       services     16.8  1.15         7.67  17.1       9.17  3.99\n 4 R       health       15    0            2      0         9.5   2.12\n 5 R       at_home      16.7  1.53         3      3.61     12     5.29\n 6 U       teacher      16.5  1.01         5.09   6.06     13.0   4.70\n 7 U       other        16.4  1.05         5.51   7.07     10.9   4.08\n 8 U       services     16.5  1.30         4.91   8.46     11.7   4.14\n 9 U       health       15.9  0.954        4.85   5.94     12.2   3.44\n10 U       at_home      16.6  1.21         4.27   5.02     10.9   4.89\n\n\nCreate a correlation matrix between all of the numeric variables\n\ncorr &lt;- combined |&gt; select(where(is.numeric)) |&gt; cor()\ncorr\n\n                    age         Medu         Fedu   traveltime    studytime\nage         1.000000000 -0.100949786 -0.107245313  0.160281754  0.043881028\nMedu       -0.100949786  1.000000000  0.621523869 -0.218794954  0.045425978\nFedu       -0.107245313  0.621523869  1.000000000 -0.193978042 -0.039289626\ntraveltime  0.160281754 -0.218794954 -0.193978042  1.000000000 -0.103243249\nstudytime   0.043881028  0.045425978 -0.039289626 -0.103243249  1.000000000\nfailures    0.243429617 -0.125608045 -0.157496645  0.104521138 -0.179515785\nfamrel      0.049940980 -0.067657746 -0.047260992 -0.027275744  0.001381660\nfreetime   -0.045824466  0.004013326 -0.001258667 -0.055899592 -0.091829632\ngoout       0.150794790  0.065832096  0.050593936  0.006559725 -0.009403345\nDalc        0.113952023  0.062866542  0.039126588  0.161272613 -0.172278644\nWalc        0.156817685 -0.004099434  0.023315814  0.105381347 -0.232402574\nhealth     -0.113225976 -0.011497172  0.067152933  0.020869407 -0.040979063\nabsences.x  0.143925170  0.099832689  0.024617771 -0.001464243 -0.082387919\nG1.x       -0.110379348  0.193071603  0.175557917 -0.088080745  0.125691378\nG2.x       -0.186187399  0.188735230  0.150418214 -0.184594967  0.089030600\nG3.x       -0.206031862  0.187754424  0.141990610 -0.165110961  0.045402243\nabsences.y  0.047331821  0.063530536  0.086614161  0.054308059 -0.134969383\nG1.y       -0.050549678  0.181423706  0.115531025 -0.178191662  0.229739293\nG2.y        0.029366456  0.189642017  0.136994424 -0.179611557  0.231059730\nG3.y       -0.009103257  0.158979933  0.107807478 -0.153616466  0.238553746\n              failures      famrel     freetime        goout        Dalc\nage         0.24342962  0.04994098 -0.045824466  0.150794790  0.11395202\nMedu       -0.12560804 -0.06765775  0.004013326  0.065832096  0.06286654\nFedu       -0.15749664 -0.04726099 -0.001258667  0.050593936  0.03912659\ntraveltime  0.10452114 -0.02727574 -0.055899592  0.006559725  0.16127261\nstudytime  -0.17951579  0.00138166 -0.091829632 -0.009403345 -0.17227864\nfailures    1.00000000  0.09437401  0.089757964  0.097119445  0.16213974\nfamrel      0.09437401  1.00000000  0.090946059  0.033058834 -0.05737989\nfreetime    0.08975796  0.09094606  1.000000000  0.243271162  0.20497133\ngoout       0.09711944  0.03305883  0.243271162  1.000000000  0.25703214\nDalc        0.16213974 -0.05737989  0.204971335  0.257032140  1.00000000\nWalc        0.16736348 -0.12634267  0.119021094  0.378591514  0.64989386\nhealth      0.04225577  0.13959656  0.070864701 -0.049000564  0.05996329\nabsences.x  0.12006863 -0.04806901 -0.046300383  0.078848996  0.15159884\nG1.x       -0.19581035 -0.05618075 -0.017100766 -0.115882796 -0.09641793\nG2.x       -0.16669179 -0.08710139 -0.029677027 -0.158978350 -0.05916707\nG3.x       -0.14303203 -0.01797570 -0.006516202 -0.118423233 -0.04696434\nabsences.y  0.13424264 -0.02955203 -0.011429255  0.128521823  0.10753855\nG1.y       -0.26927657 -0.06419546 -0.085629896 -0.071905764 -0.23398211\nG2.y       -0.26992597 -0.02441686 -0.087231866 -0.091151551 -0.25300707\nG3.y       -0.32775690 -0.01282948 -0.110638817 -0.073423265 -0.27992305\n                   Walc       health   absences.x        G1.x        G2.x\nage         0.156817685 -0.113225976  0.143925170 -0.11037935 -0.18618740\nMedu       -0.004099434 -0.011497172  0.099832689  0.19307160  0.18873523\nFedu        0.023315814  0.067152933  0.024617771  0.17555792  0.15041821\ntraveltime  0.105381347  0.020869407 -0.001464243 -0.08808075 -0.18459497\nstudytime  -0.232402574 -0.040979063 -0.082387919  0.12569138  0.08903060\nfailures    0.167363479  0.042255769  0.120068630 -0.19581035 -0.16669179\nfamrel     -0.126342672  0.139596565 -0.048069014 -0.05618075 -0.08710139\nfreetime    0.119021094  0.070864701 -0.046300383 -0.01710077 -0.02967703\ngoout       0.378591514 -0.049000564  0.078848996 -0.11588280 -0.15897835\nDalc        0.649893859  0.059963287  0.151598836 -0.09641793 -0.05916707\nWalc        1.000000000  0.070450703  0.208026186 -0.07964360 -0.06540510\nhealth      0.070450703  1.000000000  0.012122515 -0.06155381 -0.07666718\nabsences.x  0.208026186  0.012122515  1.000000000 -0.06946116 -0.07580245\nG1.x       -0.079643599 -0.061553810 -0.069461164  1.00000000  0.86588796\nG2.x       -0.065405098 -0.076667185 -0.075802450  0.86588796  1.00000000\nG3.x       -0.027623053 -0.047513775 -0.028118470  0.81859418  0.91357599\nabsences.y  0.150366322 -0.001077612  0.563815592 -0.08760610 -0.12636236\nG1.y       -0.158160549 -0.126244006 -0.092477610  0.59293522  0.54300736\nG2.y       -0.183295800 -0.170419288 -0.145164017  0.59517224  0.56521350\nG3.y       -0.182606733 -0.162249671 -0.135726385  0.54388734  0.49603265\n                   G3.x   absences.y        G1.y        G2.y         G3.y\nage        -0.206031862  0.047331821 -0.05054968  0.02936646 -0.009103257\nMedu        0.187754424  0.063530536  0.18142371  0.18964202  0.158979933\nFedu        0.141990610  0.086614161  0.11553102  0.13699442  0.107807478\ntraveltime -0.165110961  0.054308059 -0.17819166 -0.17961156 -0.153616466\nstudytime   0.045402243 -0.134969383  0.22973929  0.23105973  0.238553746\nfailures   -0.143032028  0.134242644 -0.26927657 -0.26992597 -0.327756897\nfamrel     -0.017975700 -0.029552034 -0.06419546 -0.02441686 -0.012829483\nfreetime   -0.006516202 -0.011429255 -0.08562990 -0.08723187 -0.110638817\ngoout      -0.118423233  0.128521823 -0.07190576 -0.09115155 -0.073423265\nDalc       -0.046964337  0.107538550 -0.23398211 -0.25300707 -0.279923052\nWalc       -0.027623053  0.150366322 -0.15816055 -0.18329580 -0.182606733\nhealth     -0.047513775 -0.001077612 -0.12624401 -0.17041929 -0.162249671\nabsences.x -0.028118470  0.563815592 -0.09247761 -0.14516402 -0.135726385\nG1.x        0.818594184 -0.087606100  0.59293522  0.59517224  0.543887345\nG2.x        0.913575991 -0.126362360  0.54300736  0.56521350  0.496032649\nG3.x        1.000000000 -0.116640460  0.52288461  0.54545279  0.475956497\nabsences.y -0.116640460  1.000000000 -0.09864117 -0.12070727 -0.071452010\nG1.y        0.522884610 -0.098641173  1.00000000  0.88415041  0.825414320\nG2.y        0.545452789 -0.120707273  0.88415041  1.00000000  0.894309821\nG3.y        0.475956497 -0.071452010  0.82541432  0.89430982  1.000000000\n\n\nCreate a histogram, kernel density plot, and boxplot for two of the numeric variables across one of the categorical variables (that is, create graphs that can compare the distributions across the groups on the same plot (no faceting here)). Add appropriate labels and titles.\n\nggplot(combined, aes(x = absences.x , fill = address)) +\n  geom_histogram(color='black') + labs(title = \"Distribution of Absences in Math Class by Address\", x = \"Math Class Absences\", y = \"Number of Absences\")\n\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n\n\n\n\n\n\n\n\n\nIn this plot we can see that math class absences appears to have an Exponential Distribution and that the majority of students come from an Urban address.\n\nggplot(combined, aes(x = G3.x , fill = address)) +\n  geom_histogram(color='black') + labs(title = \"Distribution of Final Math Grade by Address\", x = \"Final Math Grade\", y = \"Number of Students\")\n\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n\n\n\n\n\n\n\n\n\nIn this plot we can see that the distribution of final grade in math is approximately normal. The zeros at the left end does seem high and probably should be investigated to see if this is a data error.\n\nggplot(combined, aes(x = absences.x , fill = address)) +\n  geom_density(kernel = \"gaussian\") + labs(title = \"Kernel Density of Absences in Math Class by Address\", x = \"Math Class Absences\", y = \"Density\")\n\n\n\n\n\n\n\n\nHere, the distribution of math class absences for rural students is similar to the distribution for urban students. The density at the end with rural absences greater than 70 compared to the high of 55 for urban might be interesting to investigate.\n\nggplot(combined, aes(x = G3.x , fill = address)) +\n  geom_density(kernel = \"gaussian\") + labs(title = \"Kernel Density of Final Math Grade by Address\", x = \"Final Math Grade\", y = \"Density\")\n\n\n\n\n\n\n\n\nIn this plot, it appears that the distribution of final grade in math vs. address differs between rural and urban addresses.\n\nggplot(combined, aes(x = address, y = absences.x , fill = address)) +\n  geom_boxplot() + labs(title = \"Boxplot of Absences in Math Class by Address\", x = \"Address\", y = \"Math Class Absences\")\n\n\n\n\n\n\n\n\nThe plot suggests that the median of math class absences is similar across rural and urban addresses. The range of the rural absences tops out at 75 compared to 55 for the urban addresses. The orange box with the median toward the bottom left suggests right skew for rural addresses. The blue box with the median toward the top suggest left skew for urban addresses.\n\nggplot(combined, aes(x = address, y = G3.x , fill = address)) +\n  geom_boxplot() + labs(title = \"Boxplot of Math Final Grade by Address\", x = \"Address\", y = \"Final Math Grade\")\n\n\n\n\n\n\n\n\nThis plot suggests that final math scores for Urban and Rural addresses are similar. Here, the distribution of Rural scores appears symmetric. The distribution of urban scores is slightly left skewed. Note that the range of Urban students is wider. This seems counterintuitive. Smaller sample sizes usually leads to wider variation.\nCreate two scatterplots relating a G3 variable to other numeric variables (put G3 on the y-axis). You should jitter the points if they sit on top of each other. Color the points by a categorical variable in each. Add appropriate labels and titles.\n\n# Check for overlapping points\n# sum(duplicated(combined[, c(\"age\", \"G3.x\")]))\n# sum(duplicated(combined[, c(\"absences.x\", \"G3.x\")]))\n\nggplot(combined, aes(x = age, y = G3.y, color = address)) + \n  geom_point() + geom_jitter(width = 0.5, alpha = 0.3) + \n  labs(title = \"Scatterplot of Final Language Grade by Age and Address\", x = \"Student Age\", y = \"Final Language Grade\")\n\n\n\n\n\n\n\n\nThis plot suggest that final language scores are similar across age, except for the 22 year old points, which may truly be outliers. Address does not seem to have an effect on final language scores.\n\nggplot(combined, aes(x = absences.y, y = G3.y, color = address)) +\n  geom_point() + geom_jitter(width = 0.5, alpha = 0.3) + \n  labs(title = \"Scatterplot of Final Language Grade by Absences and Address\", x = \"Language Class Absences\", y = \"Final Language Grade\")\n\n\n\n\n\n\n\n\nThis plot suggest that final language scores slightly drop with absences. But there are a few students that had over 30 absences and still are close to the middle of the cloud of points. I find that interesting.\nRepeat the scatter plot step but use faceting to obtain graphs at each setting of another categorical variable.\n\nnew_famrel_labels &lt;- c(\"1\" = \"very bad\", \"2\" = \"bad\", \"3\" = \"OK\", \"4\" = \"good\", \"5\" = \"excellent\" )\n\nggplot(combined, aes(x = age, y = G3.y, color = address)) + \n  geom_point() + geom_jitter(width = 0.5, alpha = 0.3) + \n  labs(title = \"Scatterplot of Final Language Grade by Age, Family Relationship and Address\", x = \"Student Age\", y = \"Final Language Grade\") + \n  facet_wrap(~ famrel, labeller = labeller(famrel = new_famrel_labels))\n\n\n\n\n\n\n\n\nThis plot suggests that family relationship, age, and address do not seem to have an effect on final language grade. There are some points out of the cloud but the bulk of the mass of points supports my conclusion.\n\nnew_famrel_labels &lt;- c(\"1\" = \"very bad\", \"2\" = \"bad\", \"3\" = \"OK\", \"4\" = \"good\", \"5\" = \"excellent\" )\n\nggplot(combined, aes(x = absences.y, y = G3.y, color = address)) + \n  geom_point() + geom_jitter(width = 0.5, alpha = 0.3) + \n  labs(title = str_wrap(\"Scatterplot of Final Language Grade by Absences, Family Relationship and Address\", width = 50), x = \"Student Age\", y = \"Final Language Grade\") + \n  facet_wrap(~ famrel, labeller = labeller(famrel = new_famrel_labels))\n\n\n\n\n\n\n\n\nThis plot suggests that family relationship, absences, and address do not seem to have an effect on final language grade. There are some points out of the cloud but the bulk of the mass of points supports my conclusion.\nRepeat the scatter plot step but use faceting to obtain graphs at each combination of two categorical variables.\n\nnew_famrel_labels &lt;- c(\"1\" = \"very bad\", \"2\" = \"bad\", \"3\" = \"OK\", \"4\" = \"good\", \"5\" = \"excellent\" )\n\nggplot(combined, aes(x = age, y = G3.y, color = address)) + \n  geom_point() + geom_jitter(width = 0.5, alpha = 0.3) + \n  labs(title = str_wrap(\"Scatterplot of Final Language Grade by Age, Family Relationship, Guardian and Address\", width = 50), x = \"Student Age\", y = \"Final Language Grade\") + \n  facet_grid(guardian ~ famrel, labeller = labeller(famrel = new_famrel_labels))\n\n\n\n\n\n\n\n\nIn this plot, it appears that the selected factors do not have an effect on final language grade. The other guardian students appear to have somewhat lower scores, but the sample size is small so it is difficult to draw any confident conclusions from this.\n\nnew_famrel_labels &lt;- c(\"1\" = \"very bad\", \"2\" = \"bad\", \"3\" = \"OK\", \"4\" = \"good\", \"5\" = \"excellent\" )\n\nggplot(combined, aes(x = absences.y, y = G3.y, color = address)) + \n  geom_point() + geom_jitter(width = 0.5, alpha = 0.3) + \n  labs(title = str_wrap(\"Scatterplot of Final Language Grade by Absence, Family Relationship, Guardian and Address\", width = 50), x = \"Language Class Absences\", y = \"Final Language Grade\" ) + \n  facet_grid(guardian ~ famrel, labeller = labeller(famrel = new_famrel_labels))\n\n\n\n\n\n\n\n\nThis plot suggests that language class absences may have a slight effect on final language grade (more absences translates to lower grades). In the boxes that have at least 5 points, the points seem to fall off a bit to the left."
  },
  {
    "objectID": "EDA Practice.html#task-1-read-in-the-data-and-modify",
    "href": "EDA Practice.html#task-1-read-in-the-data-and-modify",
    "title": "EDA Practice",
    "section": "",
    "text": "Modify the code provided with the download to read in the data from a local file source (your downloaded .csv files) and combine the two data frames. Use local paths as they do in their code.\n\n\n\nd1=read.table(\"student-mat.csv\",sep=\";\",header=TRUE)\nd2=read.table(\"student-por.csv\",sep=\";\",header=TRUE)\n\nd3=merge(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\nprint(nrow(d3)) # 382 students\n\n[1] 382\n\n\n\nread in and combine the data using functions from the tidyverse. Use an inner_join() on the variables they used in their code. Do you notice any issues? Make a note of the issue.\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   4.0.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nmath = read_delim(\"student-mat.csv\", delim = \";\",col_names = TRUE)\n\nRows: 395 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npor = read_delim(\"student-por.csv\", delim = \";\",col_names = TRUE)\n\nRows: 649 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nd3 = inner_join(math, por, by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(math, por, by = c(\"school\", \"sex\", \"age\", \"address\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nThis warning means that, for the columns we specified in the inner join, values in Row 79 of the math data appear more than once in the por frame, and vice versa (values in Row 79 of the por data appear more than once in the math data. As a result, the inner join creates all possible combinations for those matches.\n\nUse an inner_join() on all variables other than G1, G2, G3, paid, and absences. Use this form of the combined data in further exercises.\n\n\ncombined &lt;- inner_join(math, por, by = c(\"school\", \"sex\", \"age\", \"address\", \"famsize\", \"Pstatus\", \"Medu\", \"Fedu\", \"Mjob\", \"Fjob\", \"reason\", \"guardian\", \"traveltime\", \"studytime\", \"failures\", \"schoolsup\", \"famsup\", \"activities\", \"nursery\", \"higher\", \"internet\", \"romantic\", \"famrel\", \"freetime\", \"goout\", \"Dalc\", \"Walc\", \"health\"))\n\nThis code performs an inner join between the math and por data frames using a comprehensive set of columns as keys. This will keep only the rows where all these columns match in both data frames. If there are columns in math and por with the same name that are not included in the by argument, the resulting combined data frame will have those columns with .x and .y suffixes to distinguish them (absences, paid, G1, G2 and G3).\nNext, for the math data, Portuguese, and combined data, choose four categorical variables you are interested in and convert those into factor variables in each tibble (use the same four variables in each). Use the mutate() function to accomplish this.\nI chose guardian, reason, Mjob and Fjob\n\nmath |&gt; mutate(guardian = as_factor(guardian), reason = as_factor(reason), Mjob = as_factor(Mjob), Fjob = as_factor(Fjob))\n\n# A tibble: 395 × 33\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;    &lt;fct&gt;  &lt;fct&gt; \n 1 GP     F        18 U       GT3     A           4     4 at_home  teach… course\n 2 GP     F        17 U       GT3     T           1     1 at_home  other  course\n 3 GP     F        15 U       LE3     T           1     1 at_home  other  other \n 4 GP     F        15 U       GT3     T           4     2 health   servi… home  \n 5 GP     F        16 U       GT3     T           3     3 other    other  home  \n 6 GP     M        16 U       LE3     T           4     3 services other  reput…\n 7 GP     M        16 U       LE3     T           2     2 other    other  home  \n 8 GP     F        17 U       GT3     A           4     4 other    teach… home  \n 9 GP     M        15 U       LE3     A           3     2 services other  home  \n10 GP     M        15 U       GT3     T           3     4 other    other  home  \n# ℹ 385 more rows\n# ℹ 22 more variables: guardian &lt;fct&gt;, traveltime &lt;dbl&gt;, studytime &lt;dbl&gt;,\n#   failures &lt;dbl&gt;, schoolsup &lt;chr&gt;, famsup &lt;chr&gt;, paid &lt;chr&gt;,\n#   activities &lt;chr&gt;, nursery &lt;chr&gt;, higher &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic &lt;chr&gt;, famrel &lt;dbl&gt;, freetime &lt;dbl&gt;, goout &lt;dbl&gt;, Dalc &lt;dbl&gt;,\n#   Walc &lt;dbl&gt;, health &lt;dbl&gt;, absences &lt;dbl&gt;, G1 &lt;dbl&gt;, G2 &lt;dbl&gt;, G3 &lt;dbl&gt;\n\npor |&gt; mutate(guardian = as_factor(guardian), reason = as_factor(reason), Mjob = as_factor(Mjob), Fjob = as_factor(Fjob))\n\n# A tibble: 649 × 33\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;    &lt;fct&gt;  &lt;fct&gt; \n 1 GP     F        18 U       GT3     A           4     4 at_home  teach… course\n 2 GP     F        17 U       GT3     T           1     1 at_home  other  course\n 3 GP     F        15 U       LE3     T           1     1 at_home  other  other \n 4 GP     F        15 U       GT3     T           4     2 health   servi… home  \n 5 GP     F        16 U       GT3     T           3     3 other    other  home  \n 6 GP     M        16 U       LE3     T           4     3 services other  reput…\n 7 GP     M        16 U       LE3     T           2     2 other    other  home  \n 8 GP     F        17 U       GT3     A           4     4 other    teach… home  \n 9 GP     M        15 U       LE3     A           3     2 services other  home  \n10 GP     M        15 U       GT3     T           3     4 other    other  home  \n# ℹ 639 more rows\n# ℹ 22 more variables: guardian &lt;fct&gt;, traveltime &lt;dbl&gt;, studytime &lt;dbl&gt;,\n#   failures &lt;dbl&gt;, schoolsup &lt;chr&gt;, famsup &lt;chr&gt;, paid &lt;chr&gt;,\n#   activities &lt;chr&gt;, nursery &lt;chr&gt;, higher &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic &lt;chr&gt;, famrel &lt;dbl&gt;, freetime &lt;dbl&gt;, goout &lt;dbl&gt;, Dalc &lt;dbl&gt;,\n#   Walc &lt;dbl&gt;, health &lt;dbl&gt;, absences &lt;dbl&gt;, G1 &lt;dbl&gt;, G2 &lt;dbl&gt;, G3 &lt;dbl&gt;\n\ncombined &lt;- combined |&gt; mutate(guardian = as_factor(guardian), reason = as_factor(reason), Mjob = as_factor(Mjob), Fjob = as_factor(Fjob))"
  },
  {
    "objectID": "EDA Practice.html#task-2-summarize-the-data-very-basic-eda",
    "href": "EDA Practice.html#task-2-summarize-the-data-very-basic-eda",
    "title": "EDA Practice",
    "section": "",
    "text": "We’ve talked about the general process of conducting an EDA. You try to understand how your data is stored, what is missing, and you try to summarize the variables both numerically and visually to understand relationships within the data. Do the rest of these items on the combined data:\nLook at how the data is stored and see if everything makes sense.\n\nstr(combined)\n\ntibble [320 × 38] (S3: tbl_df/tbl/data.frame)\n $ school    : chr [1:320] \"GP\" \"GP\" \"GP\" \"GP\" ...\n $ sex       : chr [1:320] \"F\" \"F\" \"F\" \"F\" ...\n $ age       : num [1:320] 18 17 15 16 16 16 17 15 15 15 ...\n $ address   : chr [1:320] \"U\" \"U\" \"U\" \"U\" ...\n $ famsize   : chr [1:320] \"GT3\" \"GT3\" \"GT3\" \"GT3\" ...\n $ Pstatus   : chr [1:320] \"A\" \"T\" \"T\" \"T\" ...\n $ Medu      : num [1:320] 4 1 4 3 4 2 4 3 3 4 ...\n $ Fedu      : num [1:320] 4 1 2 3 3 2 4 2 4 4 ...\n $ Mjob      : Factor w/ 5 levels \"at_home\",\"health\",..: 1 1 2 3 4 3 3 4 3 5 ...\n $ Fjob      : Factor w/ 5 levels \"teacher\",\"other\",..: 1 2 3 2 2 2 1 2 2 4 ...\n $ reason    : Factor w/ 4 levels \"course\",\"home\",..: 1 1 2 2 3 2 2 2 2 3 ...\n $ guardian  : Factor w/ 3 levels \"mother\",\"father\",..: 1 2 1 2 1 1 1 1 1 1 ...\n $ traveltime: num [1:320] 2 1 1 1 1 1 2 1 1 1 ...\n $ studytime : num [1:320] 2 2 3 2 2 2 2 2 2 2 ...\n $ failures  : num [1:320] 0 0 0 0 0 0 0 0 0 0 ...\n $ schoolsup : chr [1:320] \"yes\" \"no\" \"no\" \"no\" ...\n $ famsup    : chr [1:320] \"no\" \"yes\" \"yes\" \"yes\" ...\n $ paid.x    : chr [1:320] \"no\" \"no\" \"yes\" \"yes\" ...\n $ activities: chr [1:320] \"no\" \"no\" \"yes\" \"no\" ...\n $ nursery   : chr [1:320] \"yes\" \"no\" \"yes\" \"yes\" ...\n $ higher    : chr [1:320] \"yes\" \"yes\" \"yes\" \"yes\" ...\n $ internet  : chr [1:320] \"no\" \"yes\" \"yes\" \"no\" ...\n $ romantic  : chr [1:320] \"no\" \"no\" \"yes\" \"no\" ...\n $ famrel    : num [1:320] 4 5 3 4 5 4 4 4 5 3 ...\n $ freetime  : num [1:320] 3 3 2 3 4 4 1 2 5 3 ...\n $ goout     : num [1:320] 4 3 2 2 2 4 4 2 1 3 ...\n $ Dalc      : num [1:320] 1 1 1 1 1 1 1 1 1 1 ...\n $ Walc      : num [1:320] 1 1 1 2 2 1 1 1 1 2 ...\n $ health    : num [1:320] 3 3 5 5 5 3 1 1 5 2 ...\n $ absences.x: num [1:320] 6 4 2 4 10 0 6 0 0 0 ...\n $ G1.x      : num [1:320] 5 5 15 6 15 12 6 16 14 10 ...\n $ G2.x      : num [1:320] 6 5 14 10 15 12 5 18 15 8 ...\n $ G3.x      : num [1:320] 6 6 15 10 15 11 6 19 15 9 ...\n $ paid.y    : chr [1:320] \"no\" \"no\" \"no\" \"no\" ...\n $ absences.y: num [1:320] 4 2 0 0 6 0 2 0 0 2 ...\n $ G1.y      : num [1:320] 0 9 14 11 12 13 10 15 12 14 ...\n $ G2.y      : num [1:320] 11 11 14 13 12 12 13 16 12 14 ...\n $ G3.y      : num [1:320] 11 11 14 13 13 13 13 17 13 14 ...\n\n\nLooking at the output of the str() command. In addition to the changing of the four variables above into factors, the following changes would make sense. Many of them should be factors, and some should be converted to integer.\n\n$ age : int [1:320] 18 17 15 16 16 16 17 15 15 15 …\n$ Medu : fct [1:320] 4 1 4 3 4 2 4 3 3 4 …\n$ Fedu : fct [1:320] 4 1 2 3 3 2 4 2 4 4 …\n$ traveltime: fct [1:320] 2 1 1 1 1 1 2 1 1 1 …\n$ studytime : fct [1:320] 2 2 3 2 2 2 2 2 2 2 …\n$ failures : int [1:320] 0 0 0 0 0 0 0 0 0 0 …\n$ famrel : fct [1:320] 4 5 3 4 5 4 4 4 5 3 …\n$ freetime : fct [1:320] 3 3 2 3 4 4 1 2 5 3 …\n$ goout : fct [1:320] 4 3 2 2 2 4 4 2 1 3 …\n$ Dalc : fct [1:320] 1 1 1 1 1 1 1 1 1 1 …\n$ Walc : fct [1:320] 1 1 1 2 2 1 1 1 1 2 …\n$ health : fct [1:320] 3 3 5 5 5 3 1 1 5 2 …\n$ absences.x: int [1:320] 6 4 2 4 10 0 6 0 0 0 …\n$ absences.y: int [1:320] 4 2 0 0 6 0 2 0 0 2 …\n$ G1.x : int [1:320] 5 5 15 6 15 12 6 16 14 10 …\n$ G2.x : int [1:320] 6 5 14 10 15 12 5 18 15 8 …\n$ G3.x : int [1:320] 6 6 15 10 15 11 6 19 15 9 …\n$ G1.y : int [1:320] 0 9 14 11 12 13 10 15 12 14 …\n$ G2.y : int [1:320] 11 11 14 13 12 12 13 16 12 14 …\n$ G3.y : int [1:320] 11 11 14 13 13 13 13 17 13 14 …\n\nI also see that paid, absences, G1, G2 and G3 have .x and .y components from the inner join.\nDocument the missing values in the data.\n\ncolSums(is.na(combined))\n\n    school        sex        age    address    famsize    Pstatus       Medu \n         0          0          0          0          0          0          0 \n      Fedu       Mjob       Fjob     reason   guardian traveltime  studytime \n         0          0          0          0          0          0          0 \n  failures  schoolsup     famsup     paid.x activities    nursery     higher \n         0          0          0          0          0          0          0 \n  internet   romantic     famrel   freetime      goout       Dalc       Walc \n         0          0          0          0          0          0          0 \n    health absences.x       G1.x       G2.x       G3.x     paid.y absences.y \n         0          0          0          0          0          0          0 \n      G1.y       G2.y       G3.y \n         0          0          0 \n\n\nFrom this output, there does not seem to be any missing data.\n\n\nCreate a one-way contingency table, a two-way contingency table, and a three-way contingency table for some of the factor variables you created previously. Use table() to accomplish this. – Interpret a number from each resulting table (that is, pick out a value produced and explain what that value means.)\n\n#1-way Contingency Table\ncat(\"1-way Contingency Table\", \"\\n\")\n\n1-way Contingency Table \n\ntable(combined$guardian)\n\n\nmother father  other \n   237     74      9 \n\ncat(\"\\n\")\n#2-way Contingency Table\ncat(\"2-way Contingency Table\", \"\\n\")\n\n2-way Contingency Table \n\ntable(combined$guardian, combined$reason)\n\n        \n         course home reputation other\n  mother     90   60         64    23\n  father     27   22         19     6\n  other       1    5          2     1\n\ncat(\"\\n\")\n#3-way Contingency Table\ncat(\"3-way Contingency Table\", \"\\n\")\n\n3-way Contingency Table \n\ntable(combined$guardian, combined$reason, combined$Fjob)\n\n, ,  = teacher\n\n        \n         course home reputation other\n  mother      8    5          5     2\n  father      2    2          1     2\n  other       0    0          0     0\n\n, ,  = other\n\n        \n         course home reputation other\n  mother     55   38         36     9\n  father      8   12         10     1\n  other       1    5          2     0\n\n, ,  = services\n\n        \n         course home reputation other\n  mother     19   14         15    10\n  father     15    6          5     2\n  other       0    0          0     1\n\n, ,  = health\n\n        \n         course home reputation other\n  mother      2    1          6     1\n  father      1    0          3     1\n  other       0    0          0     0\n\n, ,  = at_home\n\n        \n         course home reputation other\n  mother      6    2          2     1\n  father      1    2          0     0\n  other       0    0          0     0\n\ncat(\"\\n\")\n\nInterpretation of 1-way Contingency Table - there are 237 mothers that are guardians in the sample.\nInterpretation of 2-way Contingency Table - 22 fathers chose the school because it was close to home.\nInterpretation of 3-way Contingency Table - 8 mothers who are teachers chose the school because it was close to home.\nCreate a conditional two-way table using table(). That is, condition on one variable’s setting and create a two-way table. Do this using two different methods: – Once, by subsetting the data (say with filter()) and then creating the two-way table – Once, by creating a three-way table and subsetting it\n\n#Conditional Two-way Contingency Tables \n#Using Filter\ncat(\"2-way Conditional Contingency Table\", \"\\n\", \"Filter for Mother\", \"\\n\")\n\n2-way Conditional Contingency Table \n Filter for Mother \n\nfilt &lt;- combined |&gt; filter(guardian == \"mother\") \ntable(filt$Fjob, filt$reason) \n\n          \n           course home reputation other\n  teacher       8    5          5     2\n  other        55   38         36     9\n  services     19   14         15    10\n  health        2    1          6     1\n  at_home       6    2          2     1\n\ncat(\"\\n\")\n#Subsetting a 3-way Contingency Table\ncat(\"2-way Conditional Contingency Table\", \"\\n\", \"Subset 3-Way Table\", \"\\n\")\n\n2-way Conditional Contingency Table \n Subset 3-Way Table \n\nss &lt;- table(combined$guardian, combined$Fjob, combined$reason)\nss[\"mother\", ,]\n\n          \n           course home reputation other\n  teacher       8    5          5     2\n  other        55   38         36     9\n  services     19   14         15    10\n  health        2    1          6     1\n  at_home       6    2          2     1\n\ncat(\"\\n\")\n\nCreate a two-way contingency table using group_by() and summarize() from dplyr. Then use pivot_wider() to make the result look more like the output from table().\n\ncombined |&gt;\n  group_by(guardian, reason) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'guardian'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 12 × 3\n# Groups:   guardian [3]\n   guardian reason     count\n   &lt;fct&gt;    &lt;fct&gt;      &lt;int&gt;\n 1 mother   course        90\n 2 mother   home          60\n 3 mother   reputation    64\n 4 mother   other         23\n 5 father   course        27\n 6 father   home          22\n 7 father   reputation    19\n 8 father   other          6\n 9 other    course         1\n10 other    home           5\n11 other    reputation     2\n12 other    other          1\n\n\n\ncombined |&gt;\n  group_by(guardian, reason) |&gt;\n  summarize(count = n()) |&gt;\n  pivot_wider(names_from = reason, values_from = count)\n\n`summarise()` has grouped output by 'guardian'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 5\n# Groups:   guardian [3]\n  guardian course  home reputation other\n  &lt;fct&gt;     &lt;int&gt; &lt;int&gt;      &lt;int&gt; &lt;int&gt;\n1 mother       90    60         64    23\n2 father       27    22         19     6\n3 other         1     5          2     1\n\n\nCreate a stacked bar graph and a side-by-side bar graph. Give relevant x and y labels, and a title for the plots.\n\n#Stacked Bar Graph\n\ng &lt;- ggplot(data = combined , aes(x = guardian, fill = reason))\ng + geom_bar() + labs(title = \"Count of School Choice Reason by Guardian\", x = \"Guardian Category\", y = \"Count by Guardian\")\n\n\n\n\n\n\n\n#Horizontal Bar Graph\ng &lt;- ggplot(data = combined , aes(x = guardian, fill = reason))\ng + geom_bar() + labs(title = \"Count of School Choice Reason by Guardian\", x = \"Guardian Category\", y = \"Count by Guardian\") +\ncoord_flip()\n\n\n\n\n\n\n\n\n\n\n\nThe numeric variables are age, absences, and the three test grades variables (G1, G2, and G3) from each data set (math and Portuguese).\n• Find measures of center and spread for three of these variables (including at least one G3 variable)\n– Repeat while subsetting the data in a meaningful way.\n\nlibrary(dplyr)\n\ncombined |&gt;\n  summarize(mean_age = mean(age), sd_age = sd(age))\n\n# A tibble: 1 × 2\n  mean_age sd_age\n     &lt;dbl&gt;  &lt;dbl&gt;\n1     16.5   1.14\n\ncombined |&gt;\n  summarize(mean_abs.x = mean(absences.x), sd_abs = sd(absences.x))\n\n# A tibble: 1 × 2\n  mean_abs.x sd_abs\n       &lt;dbl&gt;  &lt;dbl&gt;\n1       5.41   7.84\n\ncombined |&gt;\n  summarize(mean_G3.x = mean(G3.x), sd_G3 = sd(G3.x))\n\n# A tibble: 1 × 2\n  mean_G3.x sd_G3\n      &lt;dbl&gt; &lt;dbl&gt;\n1      11.0  4.30\n\n#Subsetted in a meaningful way (address = Urban)\ncombined |&gt; filter(address == \"U\") |&gt;\n  summarize(mean_age = mean(age), sd_age = sd(age))\n\n# A tibble: 1 × 2\n  mean_age sd_age\n     &lt;dbl&gt;  &lt;dbl&gt;\n1     16.4   1.12\n\ncombined |&gt; filter(address == \"U\") |&gt;\n  summarize(mean_absx.x = mean(absences.x), sd_abs = sd(absences.x))\n\n# A tibble: 1 × 2\n  mean_absx.x sd_abs\n        &lt;dbl&gt;  &lt;dbl&gt;\n1        5.23   7.24\n\ncombined |&gt; filter(address == \"U\") |&gt;\n  summarize(mean_G3.x = mean(G3.x), sd_G3 = sd(G3.x))\n\n# A tibble: 1 × 2\n  mean_G3.x sd_G3\n      &lt;dbl&gt; &lt;dbl&gt;\n1      11.3  4.18\n\n\nFind measures of center and spread across a single grouping variable for three of these variables (including a G3 variable as one of them)\n\ncombined |&gt;\n  group_by(address) |&gt;\n  summarize(mean_age = mean(age), sd_age = sd(age), mean_absx.x = mean(absences.x), sd_abs = sd(absences.x), mean_G3.x = mean(G3.x), sd_G3 = sd(G3.x))  \n\n# A tibble: 2 × 7\n  address mean_age sd_age mean_absx.x sd_abs mean_G3.x sd_G3\n  &lt;chr&gt;      &lt;dbl&gt;  &lt;dbl&gt;       &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 R           17.0   1.12        6.12   9.80      9.90  4.59\n2 U           16.4   1.12        5.23   7.24     11.3   4.18\n\n\nFind measures of center and spread across two grouping variables for three of these variables (including a G3 variable as one of them)\n\ncombined |&gt;\n  group_by(address, Fjob) |&gt;\n  summarize(mean_age = mean(age), sd_age = sd(age), mean_absx.x = mean(absences.x), sd_abs = sd(absences.x), mean_G3.x = mean(G3.x), sd_G3 = sd(G3.x))\n\n`summarise()` has grouped output by 'address'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 10 × 8\n# Groups:   address [2]\n   address Fjob     mean_age sd_age mean_absx.x sd_abs mean_G3.x sd_G3\n   &lt;chr&gt;   &lt;fct&gt;       &lt;dbl&gt;  &lt;dbl&gt;       &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1 R       teacher      16.2  1.10         6.2    3.77     11     6.82\n 2 R       other        17.2  0.986        5.85   5.55      9.95  4.71\n 3 R       services     16.8  1.15         7.67  17.1       9.17  3.99\n 4 R       health       15    0            2      0         9.5   2.12\n 5 R       at_home      16.7  1.53         3      3.61     12     5.29\n 6 U       teacher      16.5  1.01         5.09   6.06     13.0   4.70\n 7 U       other        16.4  1.05         5.51   7.07     10.9   4.08\n 8 U       services     16.5  1.30         4.91   8.46     11.7   4.14\n 9 U       health       15.9  0.954        4.85   5.94     12.2   3.44\n10 U       at_home      16.6  1.21         4.27   5.02     10.9   4.89\n\n\nCreate a correlation matrix between all of the numeric variables\n\ncorr &lt;- combined |&gt; select(where(is.numeric)) |&gt; cor()\ncorr\n\n                    age         Medu         Fedu   traveltime    studytime\nage         1.000000000 -0.100949786 -0.107245313  0.160281754  0.043881028\nMedu       -0.100949786  1.000000000  0.621523869 -0.218794954  0.045425978\nFedu       -0.107245313  0.621523869  1.000000000 -0.193978042 -0.039289626\ntraveltime  0.160281754 -0.218794954 -0.193978042  1.000000000 -0.103243249\nstudytime   0.043881028  0.045425978 -0.039289626 -0.103243249  1.000000000\nfailures    0.243429617 -0.125608045 -0.157496645  0.104521138 -0.179515785\nfamrel      0.049940980 -0.067657746 -0.047260992 -0.027275744  0.001381660\nfreetime   -0.045824466  0.004013326 -0.001258667 -0.055899592 -0.091829632\ngoout       0.150794790  0.065832096  0.050593936  0.006559725 -0.009403345\nDalc        0.113952023  0.062866542  0.039126588  0.161272613 -0.172278644\nWalc        0.156817685 -0.004099434  0.023315814  0.105381347 -0.232402574\nhealth     -0.113225976 -0.011497172  0.067152933  0.020869407 -0.040979063\nabsences.x  0.143925170  0.099832689  0.024617771 -0.001464243 -0.082387919\nG1.x       -0.110379348  0.193071603  0.175557917 -0.088080745  0.125691378\nG2.x       -0.186187399  0.188735230  0.150418214 -0.184594967  0.089030600\nG3.x       -0.206031862  0.187754424  0.141990610 -0.165110961  0.045402243\nabsences.y  0.047331821  0.063530536  0.086614161  0.054308059 -0.134969383\nG1.y       -0.050549678  0.181423706  0.115531025 -0.178191662  0.229739293\nG2.y        0.029366456  0.189642017  0.136994424 -0.179611557  0.231059730\nG3.y       -0.009103257  0.158979933  0.107807478 -0.153616466  0.238553746\n              failures      famrel     freetime        goout        Dalc\nage         0.24342962  0.04994098 -0.045824466  0.150794790  0.11395202\nMedu       -0.12560804 -0.06765775  0.004013326  0.065832096  0.06286654\nFedu       -0.15749664 -0.04726099 -0.001258667  0.050593936  0.03912659\ntraveltime  0.10452114 -0.02727574 -0.055899592  0.006559725  0.16127261\nstudytime  -0.17951579  0.00138166 -0.091829632 -0.009403345 -0.17227864\nfailures    1.00000000  0.09437401  0.089757964  0.097119445  0.16213974\nfamrel      0.09437401  1.00000000  0.090946059  0.033058834 -0.05737989\nfreetime    0.08975796  0.09094606  1.000000000  0.243271162  0.20497133\ngoout       0.09711944  0.03305883  0.243271162  1.000000000  0.25703214\nDalc        0.16213974 -0.05737989  0.204971335  0.257032140  1.00000000\nWalc        0.16736348 -0.12634267  0.119021094  0.378591514  0.64989386\nhealth      0.04225577  0.13959656  0.070864701 -0.049000564  0.05996329\nabsences.x  0.12006863 -0.04806901 -0.046300383  0.078848996  0.15159884\nG1.x       -0.19581035 -0.05618075 -0.017100766 -0.115882796 -0.09641793\nG2.x       -0.16669179 -0.08710139 -0.029677027 -0.158978350 -0.05916707\nG3.x       -0.14303203 -0.01797570 -0.006516202 -0.118423233 -0.04696434\nabsences.y  0.13424264 -0.02955203 -0.011429255  0.128521823  0.10753855\nG1.y       -0.26927657 -0.06419546 -0.085629896 -0.071905764 -0.23398211\nG2.y       -0.26992597 -0.02441686 -0.087231866 -0.091151551 -0.25300707\nG3.y       -0.32775690 -0.01282948 -0.110638817 -0.073423265 -0.27992305\n                   Walc       health   absences.x        G1.x        G2.x\nage         0.156817685 -0.113225976  0.143925170 -0.11037935 -0.18618740\nMedu       -0.004099434 -0.011497172  0.099832689  0.19307160  0.18873523\nFedu        0.023315814  0.067152933  0.024617771  0.17555792  0.15041821\ntraveltime  0.105381347  0.020869407 -0.001464243 -0.08808075 -0.18459497\nstudytime  -0.232402574 -0.040979063 -0.082387919  0.12569138  0.08903060\nfailures    0.167363479  0.042255769  0.120068630 -0.19581035 -0.16669179\nfamrel     -0.126342672  0.139596565 -0.048069014 -0.05618075 -0.08710139\nfreetime    0.119021094  0.070864701 -0.046300383 -0.01710077 -0.02967703\ngoout       0.378591514 -0.049000564  0.078848996 -0.11588280 -0.15897835\nDalc        0.649893859  0.059963287  0.151598836 -0.09641793 -0.05916707\nWalc        1.000000000  0.070450703  0.208026186 -0.07964360 -0.06540510\nhealth      0.070450703  1.000000000  0.012122515 -0.06155381 -0.07666718\nabsences.x  0.208026186  0.012122515  1.000000000 -0.06946116 -0.07580245\nG1.x       -0.079643599 -0.061553810 -0.069461164  1.00000000  0.86588796\nG2.x       -0.065405098 -0.076667185 -0.075802450  0.86588796  1.00000000\nG3.x       -0.027623053 -0.047513775 -0.028118470  0.81859418  0.91357599\nabsences.y  0.150366322 -0.001077612  0.563815592 -0.08760610 -0.12636236\nG1.y       -0.158160549 -0.126244006 -0.092477610  0.59293522  0.54300736\nG2.y       -0.183295800 -0.170419288 -0.145164017  0.59517224  0.56521350\nG3.y       -0.182606733 -0.162249671 -0.135726385  0.54388734  0.49603265\n                   G3.x   absences.y        G1.y        G2.y         G3.y\nage        -0.206031862  0.047331821 -0.05054968  0.02936646 -0.009103257\nMedu        0.187754424  0.063530536  0.18142371  0.18964202  0.158979933\nFedu        0.141990610  0.086614161  0.11553102  0.13699442  0.107807478\ntraveltime -0.165110961  0.054308059 -0.17819166 -0.17961156 -0.153616466\nstudytime   0.045402243 -0.134969383  0.22973929  0.23105973  0.238553746\nfailures   -0.143032028  0.134242644 -0.26927657 -0.26992597 -0.327756897\nfamrel     -0.017975700 -0.029552034 -0.06419546 -0.02441686 -0.012829483\nfreetime   -0.006516202 -0.011429255 -0.08562990 -0.08723187 -0.110638817\ngoout      -0.118423233  0.128521823 -0.07190576 -0.09115155 -0.073423265\nDalc       -0.046964337  0.107538550 -0.23398211 -0.25300707 -0.279923052\nWalc       -0.027623053  0.150366322 -0.15816055 -0.18329580 -0.182606733\nhealth     -0.047513775 -0.001077612 -0.12624401 -0.17041929 -0.162249671\nabsences.x -0.028118470  0.563815592 -0.09247761 -0.14516402 -0.135726385\nG1.x        0.818594184 -0.087606100  0.59293522  0.59517224  0.543887345\nG2.x        0.913575991 -0.126362360  0.54300736  0.56521350  0.496032649\nG3.x        1.000000000 -0.116640460  0.52288461  0.54545279  0.475956497\nabsences.y -0.116640460  1.000000000 -0.09864117 -0.12070727 -0.071452010\nG1.y        0.522884610 -0.098641173  1.00000000  0.88415041  0.825414320\nG2.y        0.545452789 -0.120707273  0.88415041  1.00000000  0.894309821\nG3.y        0.475956497 -0.071452010  0.82541432  0.89430982  1.000000000\n\n\nCreate a histogram, kernel density plot, and boxplot for two of the numeric variables across one of the categorical variables (that is, create graphs that can compare the distributions across the groups on the same plot (no faceting here)). Add appropriate labels and titles.\n\nggplot(combined, aes(x = absences.x , fill = address)) +\n  geom_histogram(color='black') + labs(title = \"Distribution of Absences in Math Class by Address\", x = \"Math Class Absences\", y = \"Number of Absences\")\n\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n\n\n\n\n\n\n\n\n\nIn this plot we can see that math class absences appears to have an Exponential Distribution and that the majority of students come from an Urban address.\n\nggplot(combined, aes(x = G3.x , fill = address)) +\n  geom_histogram(color='black') + labs(title = \"Distribution of Final Math Grade by Address\", x = \"Final Math Grade\", y = \"Number of Students\")\n\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n\n\n\n\n\n\n\n\n\nIn this plot we can see that the distribution of final grade in math is approximately normal. The zeros at the left end does seem high and probably should be investigated to see if this is a data error.\n\nggplot(combined, aes(x = absences.x , fill = address)) +\n  geom_density(kernel = \"gaussian\") + labs(title = \"Kernel Density of Absences in Math Class by Address\", x = \"Math Class Absences\", y = \"Density\")\n\n\n\n\n\n\n\n\nHere, the distribution of math class absences for rural students is similar to the distribution for urban students. The density at the end with rural absences greater than 70 compared to the high of 55 for urban might be interesting to investigate.\n\nggplot(combined, aes(x = G3.x , fill = address)) +\n  geom_density(kernel = \"gaussian\") + labs(title = \"Kernel Density of Final Math Grade by Address\", x = \"Final Math Grade\", y = \"Density\")\n\n\n\n\n\n\n\n\nIn this plot, it appears that the distribution of final grade in math vs. address differs between rural and urban addresses.\n\nggplot(combined, aes(x = address, y = absences.x , fill = address)) +\n  geom_boxplot() + labs(title = \"Boxplot of Absences in Math Class by Address\", x = \"Address\", y = \"Math Class Absences\")\n\n\n\n\n\n\n\n\nThe plot suggests that the median of math class absences is similar across rural and urban addresses. The range of the rural absences tops out at 75 compared to 55 for the urban addresses. The orange box with the median toward the bottom left suggests right skew for rural addresses. The blue box with the median toward the top suggest left skew for urban addresses.\n\nggplot(combined, aes(x = address, y = G3.x , fill = address)) +\n  geom_boxplot() + labs(title = \"Boxplot of Math Final Grade by Address\", x = \"Address\", y = \"Final Math Grade\")\n\n\n\n\n\n\n\n\nThis plot suggests that final math scores for Urban and Rural addresses are similar. Here, the distribution of Rural scores appears symmetric. The distribution of urban scores is slightly left skewed. Note that the range of Urban students is wider. This seems counterintuitive. Smaller sample sizes usually leads to wider variation.\nCreate two scatterplots relating a G3 variable to other numeric variables (put G3 on the y-axis). You should jitter the points if they sit on top of each other. Color the points by a categorical variable in each. Add appropriate labels and titles.\n\n# Check for overlapping points\n# sum(duplicated(combined[, c(\"age\", \"G3.x\")]))\n# sum(duplicated(combined[, c(\"absences.x\", \"G3.x\")]))\n\nggplot(combined, aes(x = age, y = G3.y, color = address)) + \n  geom_point() + geom_jitter(width = 0.5, alpha = 0.3) + \n  labs(title = \"Scatterplot of Final Language Grade by Age and Address\", x = \"Student Age\", y = \"Final Language Grade\")\n\n\n\n\n\n\n\n\nThis plot suggest that final language scores are similar across age, except for the 22 year old points, which may truly be outliers. Address does not seem to have an effect on final language scores.\n\nggplot(combined, aes(x = absences.y, y = G3.y, color = address)) +\n  geom_point() + geom_jitter(width = 0.5, alpha = 0.3) + \n  labs(title = \"Scatterplot of Final Language Grade by Absences and Address\", x = \"Language Class Absences\", y = \"Final Language Grade\")\n\n\n\n\n\n\n\n\nThis plot suggest that final language scores slightly drop with absences. But there are a few students that had over 30 absences and still are close to the middle of the cloud of points. I find that interesting.\nRepeat the scatter plot step but use faceting to obtain graphs at each setting of another categorical variable.\n\nnew_famrel_labels &lt;- c(\"1\" = \"very bad\", \"2\" = \"bad\", \"3\" = \"OK\", \"4\" = \"good\", \"5\" = \"excellent\" )\n\nggplot(combined, aes(x = age, y = G3.y, color = address)) + \n  geom_point() + geom_jitter(width = 0.5, alpha = 0.3) + \n  labs(title = \"Scatterplot of Final Language Grade by Age, Family Relationship and Address\", x = \"Student Age\", y = \"Final Language Grade\") + \n  facet_wrap(~ famrel, labeller = labeller(famrel = new_famrel_labels))\n\n\n\n\n\n\n\n\nThis plot suggests that family relationship, age, and address do not seem to have an effect on final language grade. There are some points out of the cloud but the bulk of the mass of points supports my conclusion.\n\nnew_famrel_labels &lt;- c(\"1\" = \"very bad\", \"2\" = \"bad\", \"3\" = \"OK\", \"4\" = \"good\", \"5\" = \"excellent\" )\n\nggplot(combined, aes(x = absences.y, y = G3.y, color = address)) + \n  geom_point() + geom_jitter(width = 0.5, alpha = 0.3) + \n  labs(title = str_wrap(\"Scatterplot of Final Language Grade by Absences, Family Relationship and Address\", width = 50), x = \"Student Age\", y = \"Final Language Grade\") + \n  facet_wrap(~ famrel, labeller = labeller(famrel = new_famrel_labels))\n\n\n\n\n\n\n\n\nThis plot suggests that family relationship, absences, and address do not seem to have an effect on final language grade. There are some points out of the cloud but the bulk of the mass of points supports my conclusion.\nRepeat the scatter plot step but use faceting to obtain graphs at each combination of two categorical variables.\n\nnew_famrel_labels &lt;- c(\"1\" = \"very bad\", \"2\" = \"bad\", \"3\" = \"OK\", \"4\" = \"good\", \"5\" = \"excellent\" )\n\nggplot(combined, aes(x = age, y = G3.y, color = address)) + \n  geom_point() + geom_jitter(width = 0.5, alpha = 0.3) + \n  labs(title = str_wrap(\"Scatterplot of Final Language Grade by Age, Family Relationship, Guardian and Address\", width = 50), x = \"Student Age\", y = \"Final Language Grade\") + \n  facet_grid(guardian ~ famrel, labeller = labeller(famrel = new_famrel_labels))\n\n\n\n\n\n\n\n\nIn this plot, it appears that the selected factors do not have an effect on final language grade. The other guardian students appear to have somewhat lower scores, but the sample size is small so it is difficult to draw any confident conclusions from this.\n\nnew_famrel_labels &lt;- c(\"1\" = \"very bad\", \"2\" = \"bad\", \"3\" = \"OK\", \"4\" = \"good\", \"5\" = \"excellent\" )\n\nggplot(combined, aes(x = absences.y, y = G3.y, color = address)) + \n  geom_point() + geom_jitter(width = 0.5, alpha = 0.3) + \n  labs(title = str_wrap(\"Scatterplot of Final Language Grade by Absence, Family Relationship, Guardian and Address\", width = 50), x = \"Language Class Absences\", y = \"Final Language Grade\" ) + \n  facet_grid(guardian ~ famrel, labeller = labeller(famrel = new_famrel_labels))\n\n\n\n\n\n\n\n\nThis plot suggests that language class absences may have a slight effect on final language grade (more absences translates to lower grades). In the boxes that have at least 5 points, the points seem to fall off a bit to the left."
  }
]